{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\webpage\\\\vasoularchive\\\\client\\\\src\\\\pages\\\\Add.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"../components/Grid\";\nimport Nav from \"../components/Nav\";\nimport { Input, TextArea, FormBtn, Label, ImageUpload } from \"../components/Form\";\n\nclass Add extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      artist: \"\",\n      titleA: \"\",\n      titleB: \"\",\n      recordLabel: \"\",\n      cityRegion: \"\",\n      releaseDate: \"\",\n      comments: \"\",\n      image: \"\",\n      file: undefined\n    };\n\n    this.handleFormSubmit = event => {\n      event.preventDefault();\n      this.sendRequest(this.state.file);\n\n      if (this.state.artist && this.state.titleA) {\n        API.saveRecord({\n          artist: this.state.artist,\n          titleA: this.state.titleA,\n          titleB: this.state.titleB,\n          recordLabel: this.state.recordLabel,\n          cityRegion: this.state.cityRegion,\n          releaseDate: this.state.releaseDate,\n          comments: this.state.comments,\n          image: this.state.file.name\n        }).then(this.setState({\n          artist: \"\",\n          titleA: \"\",\n          titleB: \"\",\n          recordLabel: \"\",\n          cityRegion: \"\",\n          releaseDate: \"\",\n          comments: \"\",\n          image: \"\"\n        })); // .catch(err => console.log(err));\n      }\n    };\n\n    this.handleChange = event => {\n      if (event.target.name === 'image') {\n        console.log(event.target.files);\n        this.state.file = event.target.files[0];\n      }\n\n      const _event$target = event.target,\n            name = _event$target.name,\n            value = _event$target.value;\n      this.setState({\n        [name]: value\n      });\n    };\n  }\n\n  sendRequest(file) {\n    console.log(file);\n    return new Promise((resolve, reject) => {\n      const req = new XMLHttpRequest();\n      req.upload.addEventListener(\"error\", event => {\n        alert(event);\n        reject(req.response);\n      });\n      const formData = new FormData();\n      formData.append(\"file\", file, this.state.image);\n      req.open(\"POST\", \"/upload\");\n      req.send(formData);\n    });\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"active\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"HOME\"), React.createElement(\"a\", {\n      href: \"/discography\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"THE ARCHIVE\"), React.createElement(\"a\", {\n      href: \"#\",\n      id: \"selected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 74\n      },\n      __self: this\n    }, \"ADD ENTRY\")), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 75\n      },\n      __self: this\n    }, React.createElement(\"form\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76\n      },\n      __self: this\n    }, React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 77\n      },\n      __self: this\n    }, \"Artist:\"), React.createElement(Input, {\n      value: this.state.artist,\n      onChange: this.handleChange,\n      name: \"artist\",\n      placeholder: \"Name of artist or group\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 78\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, \"A Side (or album title if LP or EP):\"), React.createElement(Input, {\n      value: this.state.titleA,\n      onChange: this.handleChange,\n      name: \"titleA\",\n      placeholder: \"A-Side title or Album title\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91\n      },\n      __self: this\n    }, \"B Side:\"), React.createElement(Input, {\n      value: this.state.titleB,\n      onChange: this.handleChange,\n      name: \"titleB\",\n      placeholder: \"B-Side title or if album, leave blank\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 92\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    }, \"Record Label (if no label, input 'no label'):\"), React.createElement(Input, {\n      value: this.state.recordLabel,\n      onChange: this.handleChange,\n      name: \"recordLabel\",\n      placeholder: \"Record label name (if none, note 'no label')\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 105\n      },\n      __self: this\n    }, \"City or Region:\"), React.createElement(Input, {\n      value: this.state.cityRegion,\n      onChange: this.handleChange,\n      name: \"cityRegion\",\n      placeholder: \"City/Town or general region of release\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }, \"Date of Release:\"), React.createElement(Input, {\n      value: this.state.releaseDate,\n      onChange: this.handleChange,\n      name: \"releaseDate\",\n      placeholder: \"Exact or approximate release date\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 119\n      },\n      __self: this\n    }, \"Notes on Release:\"), React.createElement(TextArea, {\n      value: this.state.comments,\n      onChange: this.handleChange,\n      name: \"comments\",\n      placeholder: \"Add any relevant notes or comments you may have for this release.\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 120\n      },\n      __self: this\n    }), React.createElement(Label, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 126\n      },\n      __self: this\n    }, \"Image of Record to Upload:\"), React.createElement(ImageUpload, {\n      value: this.state.image,\n      onChange: this.handleChange,\n      name: \"image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 127\n      },\n      __self: this\n    }), React.createElement(\"br\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 132\n      },\n      __self: this\n    }), React.createElement(FormBtn, {\n      onClick: this.handleFormSubmit,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 133\n      },\n      __self: this\n    }, \"Submit Release\"))));\n  }\n\n}\n\n;\nexport default Add;","map":{"version":3,"sources":["C:/Users/aaron/webpage/vasoularchive/client/src/pages/Add.js"],"names":["React","Component","Jumbotron","API","Link","Container","Nav","Input","TextArea","FormBtn","Label","ImageUpload","Add","state","artist","titleA","titleB","recordLabel","cityRegion","releaseDate","comments","image","file","undefined","handleFormSubmit","event","preventDefault","sendRequest","saveRecord","name","then","setState","handleChange","target","console","log","files","value","Promise","resolve","reject","req","XMLHttpRequest","upload","addEventListener","alert","response","formData","FormData","append","open","send","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container } from \"../components/Grid\";\r\nimport Nav from \"../components/Nav\";\r\nimport { Input, TextArea, FormBtn, Label, ImageUpload } from \"../components/Form\";\r\n\r\nclass Add extends Component {\r\n\r\n    state = {\r\n        artist: \"\",\r\n        titleA: \"\",\r\n        titleB: \"\",\r\n        recordLabel: \"\",\r\n        cityRegion: \"\",\r\n        releaseDate: \"\",\r\n        comments: \"\",\r\n        image: \"\",\r\n        file: undefined\r\n    };\r\n\r\n    sendRequest(file) {\r\n        console.log(file);\r\n        return new Promise((resolve, reject) => {\r\n            const req = new XMLHttpRequest();\r\n\r\n            req.upload.addEventListener(\"error\", event => {\r\n                alert(event);\r\n                reject(req.response);\r\n            });\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"file\", file, this.state.image);\r\n\r\n            req.open(\"POST\", \"/upload\");\r\n            req.send(formData);\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.sendRequest(this.state.file);\r\n        if (this.state.artist && this.state.titleA) {\r\n            API.saveRecord({\r\n                artist: this.state.artist,\r\n                titleA: this.state.titleA,\r\n                titleB: this.state.titleB,\r\n                recordLabel: this.state.recordLabel,\r\n                cityRegion: this.state.cityRegion,\r\n                releaseDate: this.state.releaseDate,\r\n                comments: this.state.comments,\r\n                image: this.state.file.name\r\n            })\r\n                .then(this.setState({ artist: \"\", titleA: \"\", titleB: \"\", recordLabel: \"\", cityRegion: \"\", releaseDate: \"\", comments: \"\", image: \"\" }));\r\n                // .catch(err => console.log(err));\r\n        }\r\n    };\r\n\r\n    handleChange = event => {\r\n        if (event.target.name === 'image') {\r\n            console.log(event.target.files);\r\n            this.state.file = event.target.files[0];\r\n        }\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Nav><a className=\"active\" href=\"/\">HOME</a><a href=\"/discography\">THE ARCHIVE</a><a href=\"#\" id=\"selected\">ADD ENTRY</a></Nav>\r\n                <Jumbotron>\r\n                    <form>\r\n                        <Label>Artist:</Label>\r\n                        <Input\r\n                            value={this.state.artist}\r\n                            onChange={this.handleChange}\r\n                            name=\"artist\"\r\n                            placeholder=\"Name of artist or group\"\r\n                        />\r\n                        <Label>A Side (or album title if LP or EP):</Label>\r\n                        <Input\r\n                            value={this.state.titleA}\r\n                            onChange={this.handleChange}\r\n                            name=\"titleA\"\r\n                            placeholder=\"A-Side title or Album title\"\r\n                        />\r\n                        <Label>B Side:</Label>\r\n                        <Input\r\n                            value={this.state.titleB}\r\n                            onChange={this.handleChange}\r\n                            name=\"titleB\"\r\n                            placeholder=\"B-Side title or if album, leave blank\"\r\n                        />\r\n                        <Label>Record Label (if no label, input 'no label'):</Label>\r\n                        <Input\r\n                            value={this.state.recordLabel}\r\n                            onChange={this.handleChange}\r\n                            name=\"recordLabel\"\r\n                            placeholder=\"Record label name (if none, note 'no label')\"\r\n                        />                       \r\n                        <Label>City or Region:</Label>\r\n                        <Input\r\n                            value={this.state.cityRegion}\r\n                            onChange={this.handleChange}\r\n                            name=\"cityRegion\"\r\n                            placeholder=\"City/Town or general region of release\"\r\n                        />\r\n                        <Label>Date of Release:</Label>\r\n                        <Input\r\n                            value={this.state.releaseDate}\r\n                            onChange={this.handleChange}\r\n                            name=\"releaseDate\"\r\n                            placeholder=\"Exact or approximate release date\"\r\n                        />\r\n                        <Label>Notes on Release:</Label>\r\n                        <TextArea\r\n                            value={this.state.comments}\r\n                            onChange={this.handleChange}\r\n                            name=\"comments\"\r\n                            placeholder=\"Add any relevant notes or comments you may have for this release.\"\r\n                        />\r\n                        <Label>Image of Record to Upload:</Label>\r\n                        <ImageUpload\r\n                            value={this.state.image}\r\n                            onChange={this.handleChange}\r\n                            name=\"image\"\r\n                        />\r\n                        <br />\r\n                        <FormBtn onClick={this.handleFormSubmit}>Submit Release</FormBtn>\r\n                    </form>\r\n                </Jumbotron>\r\n            </Container>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Add;"]},"metadata":{},"sourceType":"module"}