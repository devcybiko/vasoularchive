{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\aaron\\\\webpage\\\\vasoularchive\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/defineProperty\";import _classCallCheck from\"C:\\\\Users\\\\aaron\\\\webpage\\\\vasoularchive\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/classCallCheck\";import _createClass from\"C:\\\\Users\\\\aaron\\\\webpage\\\\vasoularchive\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/createClass\";import _possibleConstructorReturn from\"C:\\\\Users\\\\aaron\\\\webpage\\\\vasoularchive\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/possibleConstructorReturn\";import _getPrototypeOf from\"C:\\\\Users\\\\aaron\\\\webpage\\\\vasoularchive\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/getPrototypeOf\";import _inherits from\"C:\\\\Users\\\\aaron\\\\webpage\\\\vasoularchive\\\\client\\\\node_modules\\\\react-scripts\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/inherits\";import React,{Component}from\"react\";import Jumbotron from\"../components/Jumbotron\";import API from\"../utils/API\";import{Link}from\"react-router-dom\";import{Container}from\"../components/Grid\";import Nav from\"../components/Nav\";import{Input,TextArea,FormBtn,Label,ImageUpload}from\"../components/Form\";var Add=/*#__PURE__*/function(_Component){_inherits(Add,_Component);function Add(){var _getPrototypeOf2;var _this;_classCallCheck(this,Add);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_possibleConstructorReturn(this,(_getPrototypeOf2=_getPrototypeOf(Add)).call.apply(_getPrototypeOf2,[this].concat(args)));_this.state={artist:\"\",titleA:\"\",titleB:\"\",recordLabel:\"\",cityRegion:\"\",releaseDate:\"\",comments:\"\",image:\"\",file:undefined};_this.handleFormSubmit=function(event){event.preventDefault();_this.sendRequest(_this.state.file);if(_this.state.artist&&_this.state.titleA){API.saveRecord({artist:_this.state.artist,titleA:_this.state.titleA,titleB:_this.state.titleB,recordLabel:_this.state.recordLabel,cityRegion:_this.state.cityRegion,releaseDate:_this.state.releaseDate,comments:_this.state.comments,image:_this.state.file.name}).then(_this.setState({artist:\"\",titleA:\"\",titleB:\"\",recordLabel:\"\",cityRegion:\"\",releaseDate:\"\",comments:\"\",image:\"\"}));// .catch(err => console.log(err));\n}};_this.handleChange=function(event){if(event.target.name==='image'){console.log(event.target.files);_this.state.file=event.target.files[0];}var _event$target=event.target,name=_event$target.name,value=_event$target.value;_this.setState(_defineProperty({},name,value));};return _this;}_createClass(Add,[{key:\"sendRequest\",value:function sendRequest(file){var _this2=this;console.log(file);return new Promise(function(resolve,reject){var req=new XMLHttpRequest();req.upload.addEventListener(\"error\",function(event){alert(event);reject(req.response);});var formData=new FormData();formData.append(\"file\",file,_this2.state.image);req.open(\"POST\",\"/upload\");req.send(formData);});}},{key:\"render\",value:function render(){return React.createElement(Container,{fluid:true},React.createElement(Nav,null,React.createElement(\"a\",{className:\"active\",href:\"/\"},\"HOME\"),React.createElement(\"a\",{href:\"/discography\"},\"THE ARCHIVE\"),React.createElement(\"a\",{href:\"#\",id:\"selected\"},\"ADD ENTRY\")),React.createElement(Jumbotron,null,React.createElement(\"form\",null,React.createElement(Label,null,\"Artist:\"),React.createElement(Input,{value:this.state.artist,onChange:this.handleChange,name:\"artist\",placeholder:\"Name of artist or group\"}),React.createElement(Label,null,\"A Side (or album title if LP or EP):\"),React.createElement(Input,{value:this.state.titleA,onChange:this.handleChange,name:\"titleA\",placeholder:\"A-Side title or Album title\"}),React.createElement(Label,null,\"B Side:\"),React.createElement(Input,{value:this.state.titleB,onChange:this.handleChange,name:\"titleB\",placeholder:\"B-Side title or if album, leave blank\"}),React.createElement(Label,null,\"Record Label (if no label, input 'no label'):\"),React.createElement(Input,{value:this.state.recordLabel,onChange:this.handleChange,name:\"recordLabel\",placeholder:\"Record label name (if none, note 'no label')\"}),React.createElement(Label,null,\"City or Region:\"),React.createElement(Input,{value:this.state.cityRegion,onChange:this.handleChange,name:\"cityRegion\",placeholder:\"City/Town or general region of release\"}),React.createElement(Label,null,\"Date of Release:\"),React.createElement(Input,{value:this.state.releaseDate,onChange:this.handleChange,name:\"releaseDate\",placeholder:\"Exact or approximate release date\"}),React.createElement(Label,null,\"Notes on Release:\"),React.createElement(TextArea,{value:this.state.comments,onChange:this.handleChange,name:\"comments\",placeholder:\"Add any relevant notes or comments you may have for this release.\"}),React.createElement(Label,null,\"Image of Record to Upload:\"),React.createElement(ImageUpload,{value:this.state.image,onChange:this.handleChange,name:\"image\"}),React.createElement(\"br\",null),React.createElement(FormBtn,{onClick:this.handleFormSubmit},\"Submit Release\"))));}}]);return Add;}(Component);;export default Add;","map":{"version":3,"sources":["C:/Users/aaron/webpage/vasoularchive/client/src/pages/Add.js"],"names":["React","Component","Jumbotron","API","Link","Container","Nav","Input","TextArea","FormBtn","Label","ImageUpload","Add","state","artist","titleA","titleB","recordLabel","cityRegion","releaseDate","comments","image","file","undefined","handleFormSubmit","event","preventDefault","sendRequest","saveRecord","name","then","setState","handleChange","target","console","log","files","value","Promise","resolve","reject","req","XMLHttpRequest","upload","addEventListener","alert","response","formData","FormData","append","open","send"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container } from \"../components/Grid\";\r\nimport Nav from \"../components/Nav\";\r\nimport { Input, TextArea, FormBtn, Label, ImageUpload } from \"../components/Form\";\r\n\r\nclass Add extends Component {\r\n\r\n    state = {\r\n        artist: \"\",\r\n        titleA: \"\",\r\n        titleB: \"\",\r\n        recordLabel: \"\",\r\n        cityRegion: \"\",\r\n        releaseDate: \"\",\r\n        comments: \"\",\r\n        image: \"\",\r\n        file: undefined\r\n    };\r\n\r\n    sendRequest(file) {\r\n        console.log(file);\r\n        return new Promise((resolve, reject) => {\r\n            const req = new XMLHttpRequest();\r\n\r\n            req.upload.addEventListener(\"error\", event => {\r\n                alert(event);\r\n                reject(req.response);\r\n            });\r\n\r\n            const formData = new FormData();\r\n            formData.append(\"file\", file, this.state.image);\r\n\r\n            req.open(\"POST\", \"/upload\");\r\n            req.send(formData);\r\n        })\r\n    }\r\n\r\n    handleFormSubmit = event => {\r\n        event.preventDefault();\r\n        this.sendRequest(this.state.file);\r\n        if (this.state.artist && this.state.titleA) {\r\n            API.saveRecord({\r\n                artist: this.state.artist,\r\n                titleA: this.state.titleA,\r\n                titleB: this.state.titleB,\r\n                recordLabel: this.state.recordLabel,\r\n                cityRegion: this.state.cityRegion,\r\n                releaseDate: this.state.releaseDate,\r\n                comments: this.state.comments,\r\n                image: this.state.file.name\r\n            })\r\n                .then(this.setState({ artist: \"\", titleA: \"\", titleB: \"\", recordLabel: \"\", cityRegion: \"\", releaseDate: \"\", comments: \"\", image: \"\" }));\r\n                // .catch(err => console.log(err));\r\n        }\r\n    };\r\n\r\n    handleChange = event => {\r\n        if (event.target.name === 'image') {\r\n            console.log(event.target.files);\r\n            this.state.file = event.target.files[0];\r\n        }\r\n        const { name, value } = event.target;\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Nav><a className=\"active\" href=\"/\">HOME</a><a href=\"/discography\">THE ARCHIVE</a><a href=\"#\" id=\"selected\">ADD ENTRY</a></Nav>\r\n                <Jumbotron>\r\n                    <form>\r\n                        <Label>Artist:</Label>\r\n                        <Input\r\n                            value={this.state.artist}\r\n                            onChange={this.handleChange}\r\n                            name=\"artist\"\r\n                            placeholder=\"Name of artist or group\"\r\n                        />\r\n                        <Label>A Side (or album title if LP or EP):</Label>\r\n                        <Input\r\n                            value={this.state.titleA}\r\n                            onChange={this.handleChange}\r\n                            name=\"titleA\"\r\n                            placeholder=\"A-Side title or Album title\"\r\n                        />\r\n                        <Label>B Side:</Label>\r\n                        <Input\r\n                            value={this.state.titleB}\r\n                            onChange={this.handleChange}\r\n                            name=\"titleB\"\r\n                            placeholder=\"B-Side title or if album, leave blank\"\r\n                        />\r\n                        <Label>Record Label (if no label, input 'no label'):</Label>\r\n                        <Input\r\n                            value={this.state.recordLabel}\r\n                            onChange={this.handleChange}\r\n                            name=\"recordLabel\"\r\n                            placeholder=\"Record label name (if none, note 'no label')\"\r\n                        />                       \r\n                        <Label>City or Region:</Label>\r\n                        <Input\r\n                            value={this.state.cityRegion}\r\n                            onChange={this.handleChange}\r\n                            name=\"cityRegion\"\r\n                            placeholder=\"City/Town or general region of release\"\r\n                        />\r\n                        <Label>Date of Release:</Label>\r\n                        <Input\r\n                            value={this.state.releaseDate}\r\n                            onChange={this.handleChange}\r\n                            name=\"releaseDate\"\r\n                            placeholder=\"Exact or approximate release date\"\r\n                        />\r\n                        <Label>Notes on Release:</Label>\r\n                        <TextArea\r\n                            value={this.state.comments}\r\n                            onChange={this.handleChange}\r\n                            name=\"comments\"\r\n                            placeholder=\"Add any relevant notes or comments you may have for this release.\"\r\n                        />\r\n                        <Label>Image of Record to Upload:</Label>\r\n                        <ImageUpload\r\n                            value={this.state.image}\r\n                            onChange={this.handleChange}\r\n                            name=\"image\"\r\n                        />\r\n                        <br />\r\n                        <FormBtn onClick={this.handleFormSubmit}>Submit Release</FormBtn>\r\n                    </form>\r\n                </Jumbotron>\r\n            </Container>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Add;"]},"metadata":{},"sourceType":"module"}