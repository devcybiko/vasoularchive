{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\aaron\\\\webpage\\\\vasoul2\\\\vasoularchive\\\\client\\\\src\\\\pages\\\\Discography.js\";\nimport React, { Component } from \"react\";\nimport Jumbotron from \"../components/Jumbotron\";\nimport API from \"../utils/API\";\nimport { Link } from \"react-router-dom\";\nimport { Container } from \"../components/Grid\";\nimport { List, ListItem } from \"../components/List\";\nimport Nav from \"../components/Nav\"; // import { Input, TextArea, FormBtn } from \"../components/Form\";\n\nclass Discography extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      discography: []\n    };\n\n    this.loadDiscography = () => {\n      API.getRecords().then(res => this.setState({\n        discography: res.data\n      })).catch(err => console.log(err));\n    };\n  }\n\n  componentDidMount() {\n    this.loadDiscography();\n  }\n\n  render() {\n    return React.createElement(Container, {\n      fluid: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, React.createElement(\"a\", {\n      className: \"active\",\n      href: \"/\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"HOME\"), React.createElement(\"a\", {\n      href: \"#\",\n      id: \"selected\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"THE ARCHIVE\"), React.createElement(\"a\", {\n      href: \"/addentry\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, \"ADD ENTRY\")), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, this.state.discography.length ? React.createElement(List, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, this.state.discography.map(record => React.createElement(ListItem, {\n      key: record._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, React.createElement(Link, {\n      to: \"/records/\" + record._id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 36\n      },\n      __self: this\n    }, React.createElement(\"strong\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 38\n      },\n      __self: this\n    }, record.artist), \" - \", record.titleA, \" / \", record.titleB, \" - \", record.recordLabel)))) : React.createElement(\"h3\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, \"No data to list!\")));\n  }\n\n}\n\n;\nexport default Discography;","map":{"version":3,"sources":["C:/Users/aaron/webpage/vasoul2/vasoularchive/client/src/pages/Discography.js"],"names":["React","Component","Jumbotron","API","Link","Container","List","ListItem","Nav","Discography","state","discography","loadDiscography","getRecords","then","res","setState","data","catch","err","console","log","componentDidMount","render","length","map","record","_id","artist","titleA","titleB","recordLabel"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,yBAAtB;AACA,OAAOC,GAAP,MAAgB,cAAhB;AACA,SAASC,IAAT,QAAqB,kBAArB;AACA,SAASC,SAAT,QAA0B,oBAA1B;AACA,SAASC,IAAT,EAAeC,QAAf,QAA+B,oBAA/B;AACA,OAAOC,GAAP,MAAgB,mBAAhB,C,CACA;;AAEA,MAAMC,WAAN,SAA0BR,SAA1B,CAAoC;AAAA;AAAA;AAAA,SAChCS,KADgC,GACxB;AACJC,MAAAA,WAAW,EAAE;AADT,KADwB;;AAAA,SAShCC,eATgC,GASd,MAAM;AACpBT,MAAAA,GAAG,CAACU,UAAJ,GACKC,IADL,CACUC,GAAG,IACL,KAAKC,QAAL,CAAc;AAAEL,QAAAA,WAAW,EAAEI,GAAG,CAACE;AAAnB,OAAd,CAFR,EAIKC,KAJL,CAIWC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAYF,GAAZ,CAJlB;AAKH,KAf+B;AAAA;;AAKhCG,EAAAA,iBAAiB,GAAG;AAChB,SAAKV,eAAL;AACH;;AAUDW,EAAAA,MAAM,GAAG;AACL,WACI,oBAAC,SAAD;AAAW,MAAA,KAAK,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAK;AAAG,MAAA,SAAS,EAAC,QAAb;AAAsB,MAAA,IAAI,EAAC,GAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAAL,EAA4C;AAAG,MAAA,IAAI,EAAC,GAAR;AAAY,MAAA,EAAE,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAA5C,EAAqF;AAAG,MAAA,IAAI,EAAC,WAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBAArF,CADJ,EAEI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKb,KAAL,CAAWC,WAAX,CAAuBa,MAAvB,GACG,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKd,KAAL,CAAWC,WAAX,CAAuBc,GAAvB,CAA2BC,MAAM,IAC9B,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEA,MAAM,CAACC,GAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAE,cAAcD,MAAM,CAACC,GAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAASD,MAAM,CAACE,MAAhB,CAFA,SAEoCF,MAAM,CAACG,MAF3C,SAEsDH,MAAM,CAACI,MAF7D,SAEwEJ,MAAM,CAACK,WAF/E,CADJ,CADH,CADL,CADH,GAaG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,0BAdR,CAFJ,CADJ;AAsBH;;AAxC+B;;AAyCnC;AAED,eAAetB,WAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport Jumbotron from \"../components/Jumbotron\";\r\nimport API from \"../utils/API\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { Container } from \"../components/Grid\";\r\nimport { List, ListItem } from \"../components/List\";\r\nimport Nav from \"../components/Nav\";\r\n// import { Input, TextArea, FormBtn } from \"../components/Form\";\r\n\r\nclass Discography extends Component {\r\n    state = {\r\n        discography: [],\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.loadDiscography();\r\n    };\r\n\r\n    loadDiscography = () => {\r\n        API.getRecords()\r\n            .then(res =>\r\n                this.setState({ discography: res.data })\r\n            )\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container fluid>\r\n                <Nav><a className=\"active\" href=\"/\">HOME</a><a href=\"#\" id=\"selected\">THE ARCHIVE</a><a href=\"/addentry\">ADD ENTRY</a></Nav>\r\n                <Jumbotron>\r\n                    {this.state.discography.length ? (\r\n                        <List>\r\n                            {this.state.discography.map(record => (\r\n                                <ListItem key={record._id}>\r\n                                    <Link to={\"/records/\" + record._id}>\r\n                                        \r\n                                    <strong>{record.artist}</strong> - {record.titleA} / {record.titleB} - {record.recordLabel}\r\n                                        \r\n                                    </Link>\r\n                                </ListItem>\r\n                            ))}\r\n                        </List>\r\n                    ) : (\r\n                        <h3>No data to list!</h3>\r\n                    )}\r\n                </Jumbotron>\r\n            </Container>\r\n        )\r\n    };\r\n};\r\n\r\nexport default Discography;"]},"metadata":{},"sourceType":"module"}